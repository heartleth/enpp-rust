mod transpile;
use transpile::*;

//                      /\                 ____
//                   /    |               /   |
//                 /      |            /      |
//                |       /_______   /        |
//             ___\    __/    -   `-^-,      /__-___
//           -     .---                \ ___/       `--_
//         /      //        /V\\         \              \
//       /       //    \ \/ \  /     \    |              |
//       |       |//  \ /`\_     _/   /  /               |
//       |         `--_=\/ \    __-_,, _| \             /
//       \           / |\\`/|  `   \ /    |           /
//         \         | \\ ``:_.    _-```  /        _/
//           -_       -__---___--``     -<_____--``
//              `-------=`__-|  |-_____
//                 __-=```_ ^\``/     /``\
//                /   |  |  \ `//    /     \
//              /     |      | v   //\      \
//            /      | |  |  | /  /   \      \
//         _-      /``===_=__=____=____ \     \
// =-- _ __-     /     |____________\    \     \
//  ```=___---/-`     /  /     |   |  \   \   __-
//                  /    /     |    \   \  \_-.  `---=
//                /     /      |     \    \    \_<---=`
//              /       /      |      \     \
//            /        |       ^      _\___--\
//            \\___   |=========`````` __---``
//                 `````-----------````

fn main() {
    let k = String::from("
a b c d
    ");
    println!("{}", transpile(&tree::CodeTree::treeify(&k), 0));
}